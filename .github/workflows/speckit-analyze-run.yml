name: speckit-analyze-run

on:
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]

permissions:
  contents: write
  pull-requests: write

jobs:
  analyze:
    name: Analyze agent run logs
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 24
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Download agent run logs
        id: download_logs
        uses: actions/download-artifact@v4
        with:
          name: agent-run-logs
          path: agent-run-logs
          if-no-files-found: ignore

      - name: Detect log bundle
        id: check_logs
        run: |
          if [ -f agent-run-logs/agent-run-logs.tar.gz ]; then
            printf 'found=true\n' >> "$GITHUB_OUTPUT"
            echo "speckit-analyze-run: agent-run-logs.tar.gz detected."
          else
            {
              printf 'found=false\n'
              printf 'log_count=0\n'
            } >> "$GITHUB_OUTPUT"
            echo "speckit-analyze-run: no log bundle found in artifacts."
          fi

      - name: Extract logs
        if: steps.check_logs.outputs.found == 'true'
        run: |
          mkdir -p runs_from_artifact
          tar -xzf agent-run-logs/agent-run-logs.tar.gz -C runs_from_artifact
          if [ -f runs_from_artifact/sanitizer-report.json ]; then
            echo "Sanitizer report detected." >> "$GITHUB_STEP_SUMMARY"
          fi

      - name: Inventory extracted logs
        if: steps.check_logs.outputs.found == 'true'
        id: log_inventory
        run: |
          if [ ! -d runs_from_artifact ]; then
            printf 'log_count=0\n' >> "$GITHUB_OUTPUT"
            echo "speckit-analyze-run: runs_from_artifact directory missing after extraction."
            exit 0
          fi

          count=$(find runs_from_artifact -type f | wc -l | tr -d ' ')
          printf 'log_count=%s\n' "$count" >> "$GITHUB_OUTPUT"
          echo "speckit-analyze-run: detected ${count} extracted file(s)."

      - name: Run analyzer
        if: steps.check_logs.outputs.found == 'true' && steps.log_inventory.outputs.log_count != '0'
        run: |
          if [ -f runs_from_artifact/sanitizer-report.json ]; then
            mkdir -p .speckit
            cp runs_from_artifact/sanitizer-report.json .speckit/sanitizer-report.json
            rm runs_from_artifact/sanitizer-report.json
          fi
          pnpm speckit:analyze -- \
            --raw-log "runs_from_artifact/**/*.log" \
            --raw-log "runs_from_artifact/**/*.json" \
            --raw-log "runs_from_artifact/**/*.ndjson"

      - name: Merge sanitizer report
        if: steps.check_logs.outputs.found == 'true' && steps.log_inventory.outputs.log_count != '0'
        run: |
          node <<'NODE'
          const fs = require('fs');
          const path = require('path');
          const reportPath = path.join(process.cwd(), '.speckit', 'sanitizer-report.json');
          const metricsPath = path.join(process.cwd(), '.speckit', 'metrics.json');
          if (fs.existsSync(reportPath) && fs.existsSync(metricsPath)) {
            const report = JSON.parse(fs.readFileSync(reportPath, 'utf8'));
            const metrics = JSON.parse(fs.readFileSync(metricsPath, 'utf8'));
            metrics.sanitizer_hits = report?.hits ?? 0;
            fs.writeFileSync(metricsPath, JSON.stringify(metrics, null, 2) + '\n');
          }
          NODE

      - name: Update agent trends dashboard
        if: steps.check_logs.outputs.found == 'true' && steps.log_inventory.outputs.log_count != '0'
        run: pnpm tsx scripts/analytics/trends.ts

      - name: Commit run artifacts
        if: steps.check_logs.outputs.found == 'true' && steps.log_inventory.outputs.log_count != '0'
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "chore: update speckit run artifacts"
          branch: ${{ github.head_ref }}
          file_pattern: |
            .speckit/*.json
            .speckit/*.yaml
            .speckit/*.md
            .speckit/requirements.jsonl
            .speckit/memo-history.jsonl
            docs/agent-trends.md
            RTM.md
            docs/internal/agents/coding-agent-brief.md

      - name: Write no-logs summary
        if: steps.check_logs.outputs.found != 'true' || steps.log_inventory.outputs.log_count == '0'
        env:
          LOG_COUNT: ${{ steps.log_inventory.outputs.log_count }}
          FALLBACK_COUNT: ${{ steps.check_logs.outputs.log_count }}
        run: |
          mkdir -p .speckit
          count="${LOG_COUNT:-${FALLBACK_COUNT:-0}}"
          printf '%s\n' \
            '# SpecKit Run Forensics' \
            '' \
            'No sanitized run logs were found for this pull request.' \
            "Detected log files: ${count}." \
            'Upload a runs/ bundle to enable automated analysis.' \
            > .speckit/summary.md

      - name: Post run summary comment
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          recreate: true
          path: .speckit/summary.md
